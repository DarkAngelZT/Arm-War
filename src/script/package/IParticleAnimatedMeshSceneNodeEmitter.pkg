namespace irr
{
namespace scene
{

//! A particle emitter which emits particles from mesh vertices.
class IParticleAnimatedMeshSceneNodeEmitter : public IParticleEmitter
{
public:

	//! Set Mesh to emit particles from
	virtual void setAnimatedMeshSceneNode( IAnimatedMeshSceneNode* node ) ;

	//! Set whether to use vertex normal for direction, or direction specified
	virtual void setUseNormalDirection( bool useNormalDirection = true ) ;

	//! Set the amount that the normal is divided by for getting a particles direction
	virtual void setNormalDirectionModifier( float normalDirectionModifier ) ;

	//! Sets whether to emit min<->max particles for every vertex or to pick min<->max vertices
	virtual void setEveryMeshVertex( bool everyMeshVertex = true ) ;

	//! Get mesh we're emitting particles from
	virtual const IAnimatedMeshSceneNode* getAnimatedMeshSceneNode() const ;

	//! Get whether to use vertex normal for direction, or direction specified
	virtual bool isUsingNormalDirection() const ;

	//! Get the amount that the normal is divided by for getting a particles direction
	virtual float getNormalDirectionModifier() const ;

	//! Gets whether to emit min<->max particles for every vertex or to pick min<->max vertices
	virtual bool getEveryMeshVertex() const ;

	//! Get emitter type
	virtual E_PARTICLE_EMITTER_TYPE getType();
};

} // end namespace scene
} // end namespace irr


