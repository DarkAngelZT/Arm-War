namespace irr
{
namespace scene
{

//! A particle emitter which emits from a cylindrically shaped space.
class IParticleCylinderEmitter : public IParticleEmitter
{
public:

	//! Set the center of the radius for the cylinder, at one end of the cylinder
	virtual void setCenter( const irr::core::vector3d<float>& center ) ;

	//! Set the normal of the cylinder
	virtual void setNormal( const irr::core::vector3d<float>& normal ) ;

	//! Set the radius of the cylinder
	virtual void setRadius( float radius ) ;

	//! Set the length of the cylinder
	virtual void setLength( float length ) ;

	//! Set whether or not to draw points inside the cylinder
	virtual void setOutlineOnly( bool outlineOnly = true ) ;

	//! Get the center of the cylinder
	virtual const irr::core::vector3d<float>& getCenter() const ;

	//! Get the normal of the cylinder
	virtual const irr::core::vector3d<float>& getNormal() const ;

	//! Get the radius of the cylinder
	virtual float getRadius() const ;

	//! Get the center of the cylinder
	virtual float getLength() const ;

	//! Get whether or not to draw points inside the cylinder
	virtual bool getOutlineOnly() const ;

	//! Get emitter type
	virtual E_PARTICLE_EMITTER_TYPE getType() const;
};

} // end namespace scene
} // end namespace irr


