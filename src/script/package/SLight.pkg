namespace irr
{
namespace video
{

//! Enumeration for different types of lights
enum E_LIGHT_TYPE
{
	//! point light, it has a position in space and radiates light in all directions
	ELT_POINT,
	//! spot light, it has a position in space, a direction, and a limited cone of influence
	ELT_SPOT,
	//! directional light, coming from a direction from an infinite distance
	ELT_DIRECTIONAL,

	//! Only used for counting the elements of this enum
	ELT_COUNT
};

//! structure for holding data describing a dynamic point light.
/** Irrlicht supports point lights, spot lights, and directional lights.
*/
struct SLight
{
	SLight(){}

	//! Ambient color emitted by the light
	irr::video::SColorf AmbientColor;

	//! Diffuse color emitted by the light.
	/** This is the primary color you want to set. */
	irr::video::SColorf DiffuseColor;

	//! Specular color emitted by the light.
	/** For details how to use specular highlights, see SMaterial::Shininess */
	irr::video::SColorf SpecularColor;

	//! Attenuation factors (constant, linear, quadratic)
	/** Changes the light strength fading over distance.
	Can also be altered by setting the radius, Attenuation will change to
	(0,1.f/radius,0). Can be overridden after radius was set. */
	irr::core::vector3d<float> Attenuation;

	//! The angle of the spot's outer cone. Ignored for other lights.
	float OuterCone;

	//! The angle of the spot's inner cone. Ignored for other lights.
	float InnerCone;

	//! The light strength's decrease between Outer and Inner cone.
	float Falloff;

	//! Read-ONLY! Position of the light.
	/** If Type is ELT_DIRECTIONAL, it is ignored. Changed via light scene node's position. */
	irr::core::vector3d<float> Position;

	//! Read-ONLY! Direction of the light.
	/** If Type is ELT_POINT, it is ignored. Changed via light scene node's rotation. */
	irr::core::vector3d<float> Direction;

	//! Read-ONLY! Radius of light. Everything within this radius will be lighted.
	float Radius;

	//! Read-ONLY! Type of the light. Default: ELT_POINT
	E_LIGHT_TYPE Type;

	//! Read-ONLY! Does the light cast shadows?
	bool CastShadows;
};

} // end namespace video
} // end namespace irr

