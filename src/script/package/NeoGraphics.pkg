
class NeoGraphics
{
public:
	void Update();
	
	static NeoGraphics* GetInstance();
	
	std::string GetAvailableResolution();
	
	void RenderUI();

	int GetMesh(std::string&file);
	int AddAnimatedMeshSceneNode(int meshidx, int parentIdx = -1, int id = -1,
			const irr::core::vector3df& position = irr::core::vector3df(0, 0, 0),
			const irr::core::vector3df& rotation = irr::core::vector3df(0, 0, 0),
			const irr::core::vector3df& scale = irr::core::vector3df(1.0f, 1.0f, 1.0f),
			bool alsoAddIfMeshPointerZero = false);

	int AddMeshSceneNode(int meshIdx, int parentIdx = -1, int id = -1,
			const irr::core::vector3df& position = irr::core::vector3df(0, 0, 0),
			const irr::core::vector3df& rotation = irr::core::vector3df(0, 0, 0),
			const irr::core::vector3df& scale = irr::core::vector3df(1.0f, 1.0f, 1.0f),
			bool alsoAddIfMeshPointerZero = false);

	int AddCameraSceneNode(int parentIdx = -1, const irr::core::vector3df& position =
			irr::core::vector3df(0, 0, 0), const irr::core::vector3df& lookat =
			irr::core::vector3df(0, 0, 100), int id = -1, bool makeActive = true);

	int AddCameraSceneNodeMaya(int parentIdx = -1, float rotateSpeed = -1500.f,
			float zoomSpeed = 200.f, float translationSpeed = 1500.f,
			signed int id = -1, float distance = 70.f, bool makeActive = true);

	int AddCameraSceneNodeFPS(int parentIdx = -1, float rotateSpeed = 100.0f,
			float moveSpeed = 0.5f, int id = -1, irr::SKeyMap* keyMapArray = 0,
			int keyMapSize = 0, bool noVerticalMovement = false, int jumpSpeed =
					0.f, bool invertMouse = false, bool makeActive = true);

	int AddLightSceneNode(int parentIdx = -1, const irr::core::vector3df& position =
			irr::core::vector3df(0, 0, 0),
			irr::video::SColorf color = irr::video::SColorf(1.0f, 1.0f, 1.0f),
			float radius = 100.0f, int id = -1);

	int AddBillboardSceneNode(int parentIdx = -1,
			const irr::core::dimension2d<float>& size = irr::core::dimension2d<float>(
					10.0f, 10.0f), const irr::core::vector3df& position =
					irr::core::vector3df(0, 0, 0), int id = -1,
			irr::video::SColor colorTop = 0xFFFFFFFF, irr::video::SColor colorBottom =
					0xFFFFFFFF);

	int AddParticleSystemSceneNode(bool withDefaultEmitter = true,
			int parentIdx = -1, int id = -1, const irr::core::vector3df& position =
					irr::core::vector3df(0, 0, 0), const irr::core::vector3df& rotation =
					irr::core::vector3df(0, 0, 0), const irr::core::vector3df& scale =
					irr::core::vector3df(1.0f, 1.0f, 1.0f));

	int AddEmptySceneNode(int parentIdx = -1, int id = -1);

	int AddDummyTransformationSceneNode(int parentIdx = -1, int id = -1);

	int GetActiveCamera() ;
	void SetActiveCamera(int cameraIdx);

	bool loadScene(std::string file);
	
	float GetFps();

	//get a game object by attached scene node index(用scene node反向查找保存它的game object)
	GameObject*GetAttachedGameObject(int idx);
	//bind a scene node index to game object
	void BindSceneNodeToGameObject(int idx,GameObject*go);
	void RemoveSceneNode(int index);
	void ClearNodes();

};
