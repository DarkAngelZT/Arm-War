/*
 * BitStreamLuaHelper.cpp
 *
 *  Created on: 2017年11月8日
 *      Author: neo
 *  Function here are port for lua to serialize packet data,
 *  because tolua doesn't have good support on template functions
 *  So we only export bitstream type without any member functions.
 *  And provide extra function for lua script to use bitstream for common data types
 */
namespace NeoGame
{
namespace network
{
RakNet::BitStream* CreateBitStream();
void DestroyBitStream(RakNet::BitStream* stream);
//serilize
void SerializeVector3(RakNet::BitStream* bitStream,
		const irr::core::vector3d<float>&vector3);
void SerializeFloat(RakNet::BitStream* bitStream, const float& f);
void SerializeInt(RakNet::BitStream* bitStream, const int&i);
void SerializeBool(RakNet::BitStream* bitStream, const bool&b);
void SerializeAsProtocolID(RakNet::BitStream* bitStream, const int&p);
void SerializeAsByte(RakNet::BitStream* bitStream, const int&i);
void SerializeString(RakNet::BitStream* bitStream, const std::string&str);
void SerializeGUID(RakNet::BitStream* bitStream,
		const RakNet::RakNetGUID& guid);
//deserilize
void DeserializeVector3(RakNet::BitStream* bitStream,
		irr::core::vector3d<float>&out_vector3);
void DeserializeFloat(RakNet::BitStream* bitStream, float& f);
void DeserializeInt(RakNet::BitStream* bitStream, int&i);
void DeserializeBool(RakNet::BitStream* bitStream, bool&b);
void DeserializeProtocolID(RakNet::BitStream* bitStream, int&p);
void DeserializeByte(RakNet::BitStream* bitStream, int&i);
void DeserializeString(RakNet::BitStream* bitStream, std::string&str);
void DeserializeGUID(RakNet::BitStream* bitStream, RakNet::RakNetGUID& guid);
}/* namespace network */
}/* namespace NeoGame */
